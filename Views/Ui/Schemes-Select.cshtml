@{
    ViewData["Title"] = "Select Scheme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model AuthenticationAPI.Models.ViewModels.SchemeSelectionViewModel

@section Head {
    <link rel="stylesheet" href="@(Url.Content("~/css/Schemes-Select.css"))" />
}

<div class="container">
    <div class="logo-header">
        <div class="logo">
            <span class="logo-text">BCMTrac</span>
        </div>
        <div class="welcome-text">Welcome back</div>
        <div class="subtitle">Please log into one of your</div>
        <div class="subtitle">Scheme BC/HOA/Company</div>
    </div>

    <form asp-action="SchemesSelectPost" method="post" novalidate>
        @Html.AntiForgeryToken()

        <input asp-for="SelectedSchemeId" type="hidden" id="SelectedSchemeId" />
        <div class="validation-summary">@Html.ValidationSummary()</div>
        <span class="field-error" asp-validation-for="SelectedSchemeId"></span>

        <div class="scheme-selection">
            <div class="table-header">
                <div class="scheme-name-col">Scheme BC / HOA / Company Name</div>
                <div class="entity-type-col">Category</div>
            </div>

            @if (Model.AvailableSchemes != null && Model.AvailableSchemes.Any())
            {
                foreach (var s in Model.AvailableSchemes)
                {
                    var isSelected = Model.SelectedSchemeId == s.Id;
                    <div class="scheme-item@(isSelected ? " selected" : "")"
                         data-id="@s.Id"
                         role="button"
                         tabindex="0">
                        <div class="scheme-name">@s.Name</div>
                        <div class="entity-type">@(!string.IsNullOrWhiteSpace(s.Category) ? s.Category : s.Type)</div>
                    </div>
                }
            }
            else
            {
                <div class="muted">No schemes available.</div>
            }
        </div>

    <button class="continue-btn" id="continueBtn" type="submit"
        style="display:@(!string.IsNullOrEmpty(Model.SelectedSchemeId) ? "inline-block" : "none")">
            Continue
        </button>
    </form>
</div>

<div class="footer">
    <div>© 2015–2025 BCMTrac. All rights reserved.</div>
    <div><a href="#">Website Terms of Use</a></div>
</div>

@section Scripts {
    <script>
        (function () {
            const items = document.querySelectorAll('.scheme-item');
            const hidden = document.getElementById('SelectedSchemeId');
            const submitBtn = document.getElementById('continueBtn');

            function select(el) {
                items.forEach(i => i.classList.remove('selected'));
                el.classList.add('selected');
                hidden.value = el.getAttribute('data-id') || '';
                if (hidden.value) submitBtn.style.display = 'inline-block'; else submitBtn.style.display = 'none';
            }

            items.forEach(el => {
                el.addEventListener('click', () => select(el));
                el.addEventListener('keydown', (e) => {
                    if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); select(el); }
                });
            });
        })();
    </script>

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
